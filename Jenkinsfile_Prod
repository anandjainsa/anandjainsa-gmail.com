pipeline {

    agent {

        label "DockerSlaveAP52"

    }

    tools {

        // Note: this should match with the tool name configured in your jenkins instance (JENKINS_URL/configureTools/)

        maven "maven"
        jdk "jdk1.8.0_131"
    }

environment {
        //  Define all variables

        SERVICEPORT = "8081"
        APPNAME = "memberproxyapi"
        NAMESPACE = "ns-middleware-dv1"
        ENVIRONMENT = "dv1"
        ING_SECRET = "w-ttgtpmg-net-secret"
        ING_HOST = "npworker.ttgtpmg.net"
        REL_VER = "2.2.2"
}

    stages {
        stage('Release and publish artifact') {
          environment {
            RELVER = "${REL_VER}"
             }
            steps {
              script {
            def pom = readMavenPom file: 'pom.xml'
            def version = pom.version.replace("-SNAPSHOT", ".${RELVER}")
            stage 'Build'
            sh "/var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/Maven_3.3.9/bin/mvn -DreleaseVersion=${version} -DpushChanges=false -DlocalCheckout=true -DpreparationGoals=initialize release:prepare release:perform -B"
                } 
            }
        }
    }
        stage('Building and Pushing Container Image') {
            steps {
                dockerBuild()
            }
        }

        stage("Deploying Application to Prod") {
          environment {
                 NAMESPACE = "${NAMESPACE}"
                 ENVIRONMENT = "${ENVIRONMENT}"
                 SECRET = "${ING_SECRET}"
                 HOST = "${ING_HOST}"
                }
            steps {
                 envCreate("${ENVIRONMENT}")
                 kubeDeployment("${NAMESPACE}", "${APPNAME}", "${SERVICEPORT}", "${ENVIRONMENT}", "${SECRET}", "${HOST}")
                }
        }
}
